<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller=function($window,spModal) {
  /* widget controller */
  var c = this;

  c.action = function(action,data) {
	console.log('CHARGER CARD: action: '+action);
	if(action == 'details'){
		spModal.open({
			"widget" : "charger-details",
			"widgetInput" : {
				charger_id: c.data.charger_id,
				passed_fields: data,
				embedded: true
			},
			"buttons":[],
		});
	}

	if(action == 'new_session'){
		spModal.open({
			"widget" : "sc-input-wrapper",
			"widgetInput" : {
				sys_id: c.data.constants.CAT_ITEM_NEW_SESSION,
				"display_cart_on_right": "false",
				"auto_redirect": false,
				passed_fields: data,
				embedded: true
			},
			"buttons":[],
		});
	}

  };
};]]></client_script>
        <controller_as>c</controller_as>
        <css>/*&#13;
.charge-card {&#13;
  position: relative;&#13;
  padding: 2rem;&#13;
  margin: 2rem;&#13;
  border: 1px solid grey;&#13;
  border-radius: 2rem;&#13;
  height: 15rem;&#13;
  aspect-ratio: 1 / 1;&#13;
  color: black;&#13;
  &#13;
  &amp;:hover {&#13;
  	  box-shadow: 0 0.2rem 1rem 0 rgba(0, 0, 0, .1);&#13;
&#13;
  }&#13;
}&#13;
*/&#13;
.bg {&#13;
	position: absolute;&#13;
    height: 100%;&#13;
    width: 100%;&#13;
    top: 0;&#13;
    left: 0;&#13;
    opacity: .05;&#13;
    pointer-events: none;&#13;
    overflow: hidden;&#13;
  border-radius: inherit;&#13;
  &#13;
  svg {&#13;
  	width: 110%;&#13;
    height: 110%;&#13;
  }&#13;
}&#13;
&#13;
.charging {&#13;
	border: 1px solid green;&#13;
    .icon{&#13;
      fill: green;&#13;
		color: green;&#13;
  	}&#13;
}&#13;
.connected {&#13;
	border: 1px solid cyan;&#13;
  .icon{&#13;
    fill: cyan;&#13;
    color: cyan;&#13;
  }&#13;
}&#13;
.available {&#13;
	border: 1px solid blue;&#13;
  .icon{&#13;
    fill: blue;&#13;
    color: blue;&#13;
  }&#13;
}&#13;
.error,.offline {&#13;
	color: red;&#13;
  .icon{&#13;
    fill: red;&#13;
    color: red;&#13;
  }&#13;
}&#13;
&#13;
</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>charger-card</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {
  
}]]></link>
        <name>Charger Card</name>
        <option_schema>[{"name":"click_action","section":"Behavior","default_value":"none","label":"Click action","type":"choice","choices":[{"label":"none","value":"none"},{"label":"New session","value":"new_sesssion"},{"label":"Join queue","value":"join_queue"},{"label":"Details","value":"details"}]},{"displayValue":"Charger","hint":"Hint","name":"charger_id","section":"Data","label":"Charger ID","type":"reference","value":"x_snc_charger_charger","ed":{"reference":"x_snc_charger_charger"}}]</option_schema>
        <public>false</public>
        <roles>x_snc_charger.user</roles>
        <script><![CDATA[(function() {
  /* populate the 'data' object */
  /* e.g., data.table = $sp.getValue('table'); */
	//console.log(options);
  //todo: create constants
   var cu = new ChargerUtils();
   data.constants = cu.getConstants();
   const {TABLE_CHARGERS,TABLE_QUEUE,CAT_ITEM_NEW_SESSION} = data.constants;

  data.found = false;
  data.charger_id = '';
  //data.charger = {};

  if(options.click_action){
	data.click_action = options.click_action;
  }	
  if(input && input.click_action){
	data.click_action = options.click_action;
  }


  if(options.charger_id){
	data.charger_id = options.charger_id;
  }
  if(input && input.charger_id){
	data.charger_id = input.charger_id;
  }
  console.log('Charger Card: CHARGER ID: '+data.charger_id);
	var charger = new GlideRecord(TABLE_CHARGERS);
	charger.get(data.charger_id);
	if(charger.getUniqueValue()){
		data.cat_item = {
			values:
			[
				{fieldName:'charger',fieldValue:charger.getUniqueValue(),enforced:true}
			]
		};
		data.fields = $sp.getFields(charger, 'active,bay,description,id,last_update,location,name,number,service_status,state,sys_created_on,sys_id');
		for(i in data.fields){
			var field = data.fields[i];
			//console.log(field);
			data[field.name] = field;
		}

		var co = {};
		co.number = charger.getDisplayValue('number');
		co.description = charger.getDisplayValue('description');
		data.charger = co;
		data.found = true;
	} 
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>aaron.brunet</sys_created_by>
        <sys_created_on>2024-03-01 01:51:35</sys_created_on>
        <sys_id>aa45f4e387a48a104c1fc99d0ebb35af</sys_id>
        <sys_mod_count>112</sys_mod_count>
        <sys_name>Charger Card</sys_name>
        <sys_package display_value="Charger" source="x_snc_charger">7a4ce69387e04a106e4b11f83cbb3517</sys_package>
        <sys_policy/>
        <sys_scope display_value="Charger">7a4ce69387e04a106e4b11f83cbb3517</sys_scope>
        <sys_update_name>sp_widget_aa45f4e387a48a104c1fc99d0ebb35af</sys_update_name>
        <sys_updated_by>aaron.brunet</sys_updated_by>
        <sys_updated_on>2024-03-30 20:47:12</sys_updated_on>
        <template><![CDATA[<div class="charge-card {{data.state.value}}" ng-click="c.action(data.click_action,data.cat_item)" class="charger-widget">
  <div class="bg">
    <svg class="{{data.state.value}}" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 576 512"><!--!Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.--><path d="M96 0C60.7 0 32 28.7 32 64V448c-17.7 0-32 14.3-32 32s14.3 32 32 32H320c17.7 0 32-14.3 32-32s-14.3-32-32-32V304h16c22.1 0 40 17.9 40 40v32c0 39.8 32.2 72 72 72s72-32.2 72-72V252.3c32.5-10.2 56-40.5 56-76.3V144c0-8.8-7.2-16-16-16H544V80c0-8.8-7.2-16-16-16s-16 7.2-16 16v48H480V80c0-8.8-7.2-16-16-16s-16 7.2-16 16v48H432c-8.8 0-16 7.2-16 16v32c0 35.8 23.5 66.1 56 76.3V376c0 13.3-10.7 24-24 24s-24-10.7-24-24V344c0-48.6-39.4-88-88-88H320V64c0-35.3-28.7-64-64-64H96zM216.9 82.7c6 4 8.5 11.5 6.3 18.3l-25 74.9H256c6.7 0 12.7 4.2 15 10.4s.5 13.3-4.6 17.7l-112 96c-5.5 4.7-13.4 5.1-19.3 1.1s-8.5-11.5-6.3-18.3l25-74.9H96c-6.7 0-12.7-4.2-15-10.4s-.5-13.3 4.6-17.7l112-96c5.5-4.7 13.4-5.1 19.3-1.1z"/></svg>
  </div>
  <div ng-if="data.found && data.charger">
    <h4 ng-if="data.number && data.name">{{data.id.display_value}}</h4>
	<p ng-if="data.bay.value">Bay {{data.bay.display_value}}</p>
<!--    <p ng-if="data.description">{{data.description.display_value}}</p> -->
    <p ng-if="data.state"><i class="icon fa-solid fa-circle"></i>{{data.state.display_value}}</p>
  </div>
  <div ng-if="!data.found && !data.charger">
    <p>No charger found</p>
  </div>
  
</div>]]></template>
    </sp_widget>
</record_update>
